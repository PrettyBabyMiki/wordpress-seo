yoastWebpackJsonp([13],{

/***/ 2169:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _a11ySpeak = __webpack_require__(374);\n\nvar _a11ySpeak2 = _interopRequireDefault(_a11ySpeak);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($) {\n\t\"use strict\";\n\n\tvar featuredImagePlugin;\n\tvar $featuredImageElement;\n\tvar $postImageDiv;\n\tvar $postImageDivHeading;\n\n\tvar FeaturedImagePlugin = function FeaturedImagePlugin(app) {\n\t\tthis._app = app;\n\n\t\tthis.featuredImage = null;\n\t\tthis.pluginName = \"addFeaturedImagePlugin\";\n\n\t\tthis.registerPlugin();\n\t\tthis.registerModifications();\n\t};\n\n\t/**\n  * Sets the featured image to use in the analysis\n  *\n  * @param {String} featuredImage The featured image to use.\n  *\n  * @returns {void}\n  */\n\tFeaturedImagePlugin.prototype.setFeaturedImage = function (featuredImage) {\n\t\tthis.featuredImage = featuredImage;\n\n\t\tthis._app.pluginReloaded(this.pluginName);\n\t};\n\n\t/**\n  * Removes featured image and reloads analyzer\n  *\n  * @returns {void}\n  */\n\tFeaturedImagePlugin.prototype.removeFeaturedImage = function () {\n\t\tthis.setFeaturedImage(null);\n\t};\n\n\t/**\n  * Registers this plugin to YoastSEO\n  *\n  * @returns {void}\n  */\n\tFeaturedImagePlugin.prototype.registerPlugin = function () {\n\t\tthis._app.registerPlugin(this.pluginName, { status: \"ready\" });\n\t};\n\n\t/**\n  * Registers modifications to YoastSEO\n  *\n  * @returns {void}\n  */\n\tFeaturedImagePlugin.prototype.registerModifications = function () {\n\t\tthis._app.registerModification(\"content\", this.addImageToContent.bind(this), this.pluginName, 10);\n\t};\n\n\t/**\n  * Adds featured image to sort so it can be analyzed\n  *\n  * @param {String} content The content to alter.\n  *\n  * @returns {String} Returns the possible altered content.\n  */\n\tFeaturedImagePlugin.prototype.addImageToContent = function (content) {\n\t\tif (null !== this.featuredImage) {\n\t\t\tcontent += this.featuredImage;\n\t\t}\n\n\t\treturn content;\n\t};\n\n\t/**\n  * Remove opengraph warning frame and borders\n  *\n  * @returns {void}\n  */\n\tfunction removeOpengraphWarning() {\n\t\t$(\"#yst_opengraph_image_warning\").remove();\n\t\t$postImageDiv.removeClass(\"yoast-opengraph-image-notice\");\n\t}\n\n\t/**\n  * Check if image is smaller than 200x200 pixels. If this is the case, show a warning\n  *\n  * @param {object} featuredImage The featured image object.\n  *\n  * @returns {void}\n  */\n\tfunction checkFeaturedImage(featuredImage) {\n\t\tvar attachment = featuredImage.state().get(\"selection\").first().toJSON();\n\n\t\tif (attachment.width < 200 || attachment.height < 200) {\n\t\t\t// Show warning to user and do not add image to OG\n\t\t\tif (0 === $(\"#yst_opengraph_image_warning\").length) {\n\t\t\t\t// Create a warning using native WordPress notices styling.\n\t\t\t\t$('<div id=\"yst_opengraph_image_warning\" class=\"notice notice-error notice-alt\"><p>' + wpseoFeaturedImageL10n.featured_image_notice + \"</p></div>\").insertAfter($postImageDivHeading);\n\n\t\t\t\t$postImageDiv.addClass(\"yoast-opengraph-image-notice\");\n\n\t\t\t\t(0, _a11ySpeak2.default)(wpseoFeaturedImageL10n.featured_image_notice, \"assertive\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Force reset warning\n\t\t\tremoveOpengraphWarning();\n\t\t}\n\t}\n\n\t$(document).ready(function () {\n\t\tvar featuredImage = wp.media.featuredImage.frame();\n\n\t\tif (typeof YoastSEO === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tfeaturedImagePlugin = new FeaturedImagePlugin(YoastSEO.app);\n\n\t\t$postImageDiv = $(\"#postimagediv\");\n\t\t$postImageDivHeading = $postImageDiv.find(\".hndle\");\n\n\t\tfeaturedImage.on(\"select\", function () {\n\t\t\tvar selectedImageHTML, selectedImage, alt;\n\n\t\t\tcheckFeaturedImage(featuredImage);\n\n\t\t\tselectedImage = featuredImage.state().get(\"selection\").first();\n\n\t\t\t// WordPress falls back to the title for the alt attribute if no alt is present.\n\t\t\talt = selectedImage.get(\"alt\");\n\n\t\t\tif (\"\" === alt) {\n\t\t\t\talt = selectedImage.get(\"title\");\n\t\t\t}\n\n\t\t\tselectedImageHTML = \"<img\" + ' src=\"' + selectedImage.get(\"url\") + '\"' + ' width=\"' + selectedImage.get(\"width\") + '\"' + ' height=\"' + selectedImage.get(\"height\") + '\"' + ' alt=\"' + alt + '\"/>';\n\n\t\t\tfeaturedImagePlugin.setFeaturedImage(selectedImageHTML);\n\t\t});\n\n\t\t$postImageDiv.on(\"click\", \"#remove-post-thumbnail\", function () {\n\t\t\tfeaturedImagePlugin.removeFeaturedImage();\n\t\t\tremoveOpengraphWarning();\n\t\t});\n\n\t\t$featuredImageElement = $(\"#set-post-thumbnail > img\");\n\t\tif (\"undefined\" !== typeof $featuredImageElement.prop(\"src\")) {\n\t\t\tfeaturedImagePlugin.setFeaturedImage($(\"#set-post-thumbnail \").html());\n\t\t}\n\t});\n})(jQuery);\n\n/* eslint-disable */\n/* jshint ignore:start */\n/**\n * Check if image is smaller than 200x200 pixels. If this is the case, show a warning\n * @param {object} featuredImage\n *\n * @deprecated since 3.1\n */\n/* global wp */\n/* global wpseoFeaturedImageL10n */\n/* global YoastSEO */\n/* jshint -W097 */\n/* jshint -W003 */\nfunction yst_checkFeaturedImage(featuredImage) {\n\treturn;\n}\n\n/**\n * Counter to make sure we do not end up in an endless loop if there' no remove-post-thumbnail id\n * @type {number}\n *\n * @deprecated since 3.1\n */\nvar thumbIdCounter = 0;\n\n/**\n * Variable to hold the onclick function for remove-post-thumbnail.\n * @type {function}\n *\n * @deprecated since 3.1\n */\nvar removeThumb;\n\n/**\n * If there's a remove-post-thumbnail id, add an onclick. When this id is clicked, call yst_removeOpengraphWarning\n * If not, check again after 100ms. Do not do this for more than 10 times so we do not end up in an endless loop\n *\n * @deprecated since 3.1\n */\nfunction yst_overrideElemFunction() {\n\treturn;\n}\n\n/**\n * Remove error message\n */\nfunction yst_removeOpengraphWarning() {\n\treturn;\n}\n\nwindow.yst_checkFeaturedImage = yst_checkFeaturedImage;\nwindow.thumbIdCounter = thumbIdCounter;\nwindow.removeThumb = removeThumb;\nwindow.yst_overrideElemFunction = yst_overrideElemFunction;\nwindow.yst_removeOpengraphWarning = yst_removeOpengraphWarning;\n/* jshint ignore:end */\n/* eslint-enable */\n\n//////////////////\n// WEBPACK FOOTER\n// ./wp-seo-featured-image.js\n// module id = 2169\n// module chunks = 13\n\n//# sourceURL=webpack:///./wp-seo-featured-image.js?");

/***/ }),

/***/ 374:
/***/ (function(module, exports) {

eval("var containerPolite, containerAssertive, previousMessage = \"\";\n\n/**\n * Build the live regions markup.\n *\n * @param {String} ariaLive Optional. Value for the \"aria-live\" attribute, default \"polite\".\n *\n * @returns {Object} $container The ARIA live region jQuery object.\n */\nvar addContainer = function( ariaLive ) {\n\tariaLive = ariaLive || \"polite\";\n\n\tvar container = document.createElement( \"div\" );\n\tcontainer.id = \"a11y-speak-\" + ariaLive;\n\tcontainer.className = \"a11y-speak-region\";\n\n\tvar screenReaderTextStyle = \"clip: rect(1px, 1px, 1px, 1px); position: absolute; height: 1px; width: 1px; overflow: hidden; word-wrap: normal;\";\n\tcontainer.setAttribute( \"style\", screenReaderTextStyle );\n\n\tcontainer.setAttribute( \"aria-live\", ariaLive );\n\tcontainer.setAttribute( \"aria-relevant\", \"additions text\" );\n\tcontainer.setAttribute( \"aria-atomic\", \"true\" );\n\n\tdocument.querySelector( \"body\" ).appendChild( container );\n\treturn container;\n};\n\n/**\n * Specify a function to execute when the DOM is fully loaded.\n *\n * @param {Function} callback A function to execute after the DOM is ready.\n *\n * @returns {void}\n */\nvar domReady = function( callback ) {\n\tif ( document.readyState === \"complete\" || ( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\t\treturn callback();\n\t}\n\n\tdocument.addEventListener( \"DOMContentLoaded\", callback );\n};\n\n/**\n * Create the live regions when the DOM is fully loaded.\n */\ndomReady( function() {\n\tcontainerPolite = document.getElementById( \"a11y-speak-polite\" );\n\tcontainerAssertive = document.getElementById( \"a11y-speak-assertive\" );\n\n\tif ( containerPolite === null ) {\n\t\tcontainerPolite = addContainer( \"polite\" );\n\t}\n\tif ( containerAssertive === null ) {\n\t\tcontainerAssertive = addContainer( \"assertive\" );\n\t}\n} );\n\n/**\n * Clear the live regions.\n */\nvar clear = function() {\n\tvar regions = document.querySelectorAll( \".a11y-speak-region\" );\n\tfor ( var i = 0; i < regions.length; i++ ) {\n\t\tregions[ i ].textContent = \"\";\n\t}\n};\n\n/**\n * Update the ARIA live notification area text node.\n *\n * @param {String} message  The message to be announced by Assistive Technologies.\n * @param {String} ariaLive Optional. The politeness level for aria-live. Possible values:\n *                          polite or assertive. Default polite.\n */\nvar A11ySpeak = function( message, ariaLive ) {\n\t// Clear previous messages to allow repeated strings being read out.\n\tclear();\n\n\t/*\n\t * Strip HTML tags (if any) from the message string. Ideally, messages should\n\t * be simple strings, carefully crafted for specific use with A11ySpeak.\n\t * When re-using already existing strings this will ensure simple HTML to be\n\t * stripped out and replaced with a space. Browsers will collapse multiple\n\t * spaces natively.\n\t */\n\tmessage = message.replace( /<[^<>]+>/g, \" \" );\n\n\tif ( previousMessage === message ) {\n\t\tmessage = message + \"\\u00A0\";\n\t}\n\n\tpreviousMessage = message;\n\n\tif ( containerAssertive && \"assertive\" === ariaLive ) {\n\t\tcontainerAssertive.textContent = message;\n\t} else if ( containerPolite ) {\n\t\tcontainerPolite.textContent = message;\n\t}\n};\n\nmodule.exports = A11ySpeak;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/atimmer/Documents/clones/VVV2/www/wordpress-default/public_html/wp-content/plugins/wordpress-seo/node_modules/a11y-speak/a11y-speak.js\n// module id = 374\n// module chunks = 0 1 2 3 12 13 14\n\n//# sourceURL=webpack:////Users/atimmer/Documents/clones/VVV2/www/wordpress-default/public_html/wp-content/plugins/wordpress-seo/node_modules/a11y-speak/a11y-speak.js?");

/***/ })

},[2169]);