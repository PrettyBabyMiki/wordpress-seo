// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots 1. Elements/Alert Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <span
        class="yst-alert yst-alert--info"
      >
        <svg
          aria-hidden="true"
          class="yst-alert__icon"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clip-rule="evenodd"
            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
            fill-rule="evenodd"
          />
        </svg>
        <div>
          Alert Factory
        </div>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="yst-alert yst-alert--info"
    >
      <svg
        aria-hidden="true"
        class="yst-alert__icon"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clip-rule="evenodd"
          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
          fill-rule="evenodd"
        />
      </svg>
      <div>
        Alert Factory
      </div>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Alert Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-flex-col yst-gap-2"
      >
        <span
          class="yst-alert yst-alert--info"
        >
          <svg
            aria-hidden="true"
            class="yst-alert__icon"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
              fill-rule="evenodd"
            />
          </svg>
          <div>
            This is an information alert 
            <a
              href="https://yoast.com"
            >
              with a link
            </a>
            . (default)
          </div>
        </span>
        <span
          class="yst-alert yst-alert--warning"
        >
          <svg
            aria-hidden="true"
            class="yst-alert__icon"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
              fill-rule="evenodd"
            />
          </svg>
          <div>
            This is a warning alert 
            <a
              href="https://yoast.com"
            >
              with a link
            </a>
            .
          </div>
        </span>
        <span
          class="yst-alert yst-alert--success"
        >
          <svg
            aria-hidden="true"
            class="yst-alert__icon"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
              fill-rule="evenodd"
            />
          </svg>
          <div>
            This is a success alert 
            <a
              href="https://yoast.com"
            >
              with a link
            </a>
            .
          </div>
        </span>
        <span
          class="yst-alert yst-alert--error"
        >
          <svg
            aria-hidden="true"
            class="yst-alert__icon"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
              fill-rule="evenodd"
            />
          </svg>
          <div>
            This is an error alert 
            <a
              href="https://yoast.com"
            >
              with a link
            </a>
            .
          </div>
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-flex-col yst-gap-2"
    >
      <span
        class="yst-alert yst-alert--info"
      >
        <svg
          aria-hidden="true"
          class="yst-alert__icon"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clip-rule="evenodd"
            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
            fill-rule="evenodd"
          />
        </svg>
        <div>
          This is an information alert 
          <a
            href="https://yoast.com"
          >
            with a link
          </a>
          . (default)
        </div>
      </span>
      <span
        class="yst-alert yst-alert--warning"
      >
        <svg
          aria-hidden="true"
          class="yst-alert__icon"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clip-rule="evenodd"
            d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
            fill-rule="evenodd"
          />
        </svg>
        <div>
          This is a warning alert 
          <a
            href="https://yoast.com"
          >
            with a link
          </a>
          .
        </div>
      </span>
      <span
        class="yst-alert yst-alert--success"
      >
        <svg
          aria-hidden="true"
          class="yst-alert__icon"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clip-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
            fill-rule="evenodd"
          />
        </svg>
        <div>
          This is a success alert 
          <a
            href="https://yoast.com"
          >
            with a link
          </a>
          .
        </div>
      </span>
      <span
        class="yst-alert yst-alert--error"
      >
        <svg
          aria-hidden="true"
          class="yst-alert__icon"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            clip-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
            fill-rule="evenodd"
          />
        </svg>
        <div>
          This is an error alert 
          <a
            href="https://yoast.com"
          >
            with a link
          </a>
          .
        </div>
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Badge Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <span
        class="yst-badge yst-badge--info"
      >
        Badge Factory
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="yst-badge yst-badge--info"
    >
      Badge Factory
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Badge Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-items-end yst-gap-2"
      >
        <span
          class="yst-badge yst-badge--info"
        >
          Info (default)
        </span>
        <span
          class="yst-badge yst-badge--upsell"
        >
          Upsell
        </span>
        <span
          class="yst-badge yst-badge--plain"
        >
          Plain
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-items-end yst-gap-2"
    >
      <span
        class="yst-badge yst-badge--info"
      >
        Info (default)
      </span>
      <span
        class="yst-badge yst-badge--upsell"
      >
        Upsell
      </span>
      <span
        class="yst-badge yst-badge--plain"
      >
        Plain
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Button Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <button
        class="yst-button yst-button--primary"
        type="button"
      >
        Button Factory
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="yst-button yst-button--primary"
      type="button"
    >
      Button Factory
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Button Sizes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-items-end yst-gap-2"
      >
        <button
          class="yst-button yst-button--primary yst-button--large"
          type="button"
        >
          Large
        </button>
        <button
          class="yst-button yst-button--primary"
          type="button"
        >
          Default
        </button>
        <button
          class="yst-button yst-button--primary yst-button--small"
          type="button"
        >
          Small
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-items-end yst-gap-2"
    >
      <button
        class="yst-button yst-button--primary yst-button--large"
        type="button"
      >
        Large
      </button>
      <button
        class="yst-button yst-button--primary"
        type="button"
      >
        Default
      </button>
      <button
        class="yst-button yst-button--primary yst-button--small"
        type="button"
      >
        Small
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Button States 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-items-end yst-gap-2"
      >
        <button
          class="yst-button yst-button--primary yst-cursor-wait"
          type="button"
        >
          <svg
            class="yst-animate-spin yst-w-4 yst-h-4 yst-mr-2"
            fill="none"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg/"
          >
            <circle
              class="yst-opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              stroke-width="2"
            />
            <path
              class="yst-opacity-75"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              fill="currentColor"
            />
          </svg>
          Loading
        </button>
        <button
          class="yst-button yst-button--primary yst-button--disabled"
          disabled=""
          type="button"
        >
          Disabled
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-items-end yst-gap-2"
    >
      <button
        class="yst-button yst-button--primary yst-cursor-wait"
        type="button"
      >
        <svg
          class="yst-animate-spin yst-w-4 yst-h-4 yst-mr-2"
          fill="none"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg/"
        >
          <circle
            class="yst-opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            stroke-width="2"
          />
          <path
            class="yst-opacity-75"
            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            fill="currentColor"
          />
        </svg>
        Loading
      </button>
      <button
        class="yst-button yst-button--primary yst-button--disabled"
        disabled=""
        type="button"
      >
        Disabled
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Button Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-items-end yst-gap-2"
      >
        <button
          class="yst-button yst-button--primary"
          type="button"
        >
          Primary (default)
        </button>
        <button
          class="yst-button yst-button--secondary"
          type="button"
        >
          Secondary
        </button>
        <button
          class="yst-button yst-button--error"
          type="button"
        >
          Error
        </button>
        <button
          class="yst-button yst-button--upsell"
          type="button"
        >
          Upsell
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-items-end yst-gap-2"
    >
      <button
        class="yst-button yst-button--primary"
        type="button"
      >
        Primary (default)
      </button>
      <button
        class="yst-button yst-button--secondary"
        type="button"
      >
        Secondary
      </button>
      <button
        class="yst-button yst-button--error"
        type="button"
      >
        Error
      </button>
      <button
        class="yst-button yst-button--upsell"
        type="button"
      >
        Upsell
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Checkbox Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-checkbox"
      >
        <input
          class="yst-checkbox__input"
          id="checkbox"
          name="name"
          type="checkbox"
          value="value"
        />
        <label
          class="yst-label yst-checkbox__label"
          for="checkbox"
        >
          I am a checkbox.
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-checkbox"
    >
      <input
        class="yst-checkbox__input"
        id="checkbox"
        name="name"
        type="checkbox"
        value="value"
      />
      <label
        class="yst-label yst-checkbox__label"
        for="checkbox"
      >
        I am a checkbox.
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Label Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <label
        class="yst-label"
      >
        Label Factory
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="yst-label"
    >
      Label Factory
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Link Anchor 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <a
        class="yst-link"
        href="https://yoast.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        yoast.com
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="yst-link"
      href="https://yoast.com"
      rel="noopener noreferrer"
      target="_blank"
    >
      yoast.com
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Link Button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <button
        class="yst-link"
      >
        Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="yst-link"
    >
      Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Link Custom Component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <span
        class="yst-link"
      >
        Custom 
        component
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="yst-link"
    >
      Custom 
      component
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Link Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <a
        class="yst-link"
      >
        Link factory
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="yst-link"
    >
      Link factory
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Radio Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-radio"
      >
        <input
          class="yst-radio__input"
          id="radio"
          name="name"
          type="radio"
          value="value"
        />
        <label
          class="yst-label yst-radio__label"
          for="radio"
        >
          I am a radio button.
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-radio"
    >
      <input
        class="yst-radio__input"
        id="radio"
        name="name"
        type="radio"
        value="value"
      />
      <label
        class="yst-label yst-radio__label"
        for="radio"
      >
        I am a radio button.
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Radio Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-flex-col yst-gap-4"
      >
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-1"
            name="name"
            type="radio"
            value="1"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-1"
          >
            I am a radio button.
          </label>
        </div>
        <hr />
        <div
          class="yst-radio yst-radio--inline-block"
        >
          <input
            class="yst-radio__input"
            id="radio-2"
            name="name"
            type="radio"
            value="2"
          />
          <label
            class="yst-radio__label"
            for="radio-2"
          >
            Y
            <svg
              aria-hidden="true"
              class="yst-radio__check"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                fill-rule="evenodd"
              />
            </svg>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-flex-col yst-gap-4"
    >
      <div
        class="yst-radio"
      >
        <input
          class="yst-radio__input"
          id="radio-1"
          name="name"
          type="radio"
          value="1"
        />
        <label
          class="yst-label yst-radio__label"
          for="radio-1"
        >
          I am a radio button.
        </label>
      </div>
      <hr />
      <div
        class="yst-radio yst-radio--inline-block"
      >
        <input
          class="yst-radio__input"
          id="radio-2"
          name="name"
          type="radio"
          value="2"
        />
        <label
          class="yst-radio__label"
          for="radio-2"
        >
          Y
          <svg
            aria-hidden="true"
            class="yst-radio__check"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
              fill-rule="evenodd"
            />
          </svg>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Text input Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <input
        class="yst-text-input"
        type="text"
      />
    </div>
  </body>,
  "container": <div>
    <input
      class="yst-text-input"
      type="text"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Title As 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-flex-col yst-gap-2"
      >
        <h1
          class="yst-title yst-title--1"
        >
          As h1
        </h1>
        <h2
          class="yst-title yst-title--2"
        >
          As h2
        </h2>
        <h3
          class="yst-title yst-title--3"
        >
          As h3
        </h3>
        <h4
          class="yst-title yst-title--4"
        >
          As h4
        </h4>
        <span
          class="yst-title yst-title--2"
        >
          As span with size 2
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-flex-col yst-gap-2"
    >
      <h1
        class="yst-title yst-title--1"
      >
        As h1
      </h1>
      <h2
        class="yst-title yst-title--2"
      >
        As h2
      </h2>
      <h3
        class="yst-title yst-title--3"
      >
        As h3
      </h3>
      <h4
        class="yst-title yst-title--4"
      >
        As h4
      </h4>
      <span
        class="yst-title yst-title--2"
      >
        As span with size 2
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Title Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <h1
        class="yst-title yst-title--1"
      >
        Title Factory
      </h1>
    </div>
  </body>,
  "container": <div>
    <h1
      class="yst-title yst-title--1"
    >
      Title Factory
    </h1>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Title Sizes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-flex-col yst-gap-2"
      >
        <h1
          class="yst-title yst-title--1"
        >
          Size 1
        </h1>
        <h1
          class="yst-title yst-title--2"
        >
          Size 2
        </h1>
        <h1
          class="yst-title yst-title--3"
        >
          Size 3
        </h1>
        <h1
          class="yst-title yst-title--4"
        >
          Size 4
        </h1>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-flex-col yst-gap-2"
    >
      <h1
        class="yst-title yst-title--1"
      >
        Size 1
      </h1>
      <h1
        class="yst-title yst-title--2"
      >
        Size 2
      </h1>
      <h1
        class="yst-title yst-title--3"
      >
        Size 3
      </h1>
      <h1
        class="yst-title yst-title--4"
      >
        Size 4
      </h1>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 1. Elements/Toggle Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <button
        aria-checked="false"
        aria-disabled="false"
        class="yst-toggle"
        id="headlessui-switch-3"
        role="switch"
        tabindex="0"
        type="button"
      >
        <span
          class="yst-sr-only"
        >
          Toggle
        </span>
        <span
          class="yst-toggle__handle"
        >
          <span
            aria-hidden="true"
            hidden=""
            style="display: none;"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--check"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
          <span
            aria-hidden="false"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--x"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      aria-checked="false"
      aria-disabled="false"
      class="yst-toggle"
      id="headlessui-switch-3"
      role="switch"
      tabindex="0"
      type="button"
    >
      <span
        class="yst-sr-only"
      >
        Toggle
      </span>
      <span
        class="yst-toggle__handle"
      >
        <span
          aria-hidden="true"
          hidden=""
          style="display: none;"
        >
          <svg
            aria-hidden="true"
            class="yst-toggle__icon yst-toggle__icon--check"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
              fill-rule="evenodd"
            />
          </svg>
        </span>
        <span
          aria-hidden="false"
        >
          <svg
            aria-hidden="true"
            class="yst-toggle__icon yst-toggle__icon--x"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              fill-rule="evenodd"
            />
          </svg>
        </span>
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Checkbox Group Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-checkbox-group"
      >
        <div
          class="yst-checkbox-group__options"
        >
          <div
            class="yst-checkbox"
          >
            <input
              checked=""
              class="yst-checkbox__input"
              id="checkbox-group-0"
              name="name"
              type="checkbox"
              value="1"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-1"
              name="name"
              type="checkbox"
              value="2"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-2"
              name="name"
              type="checkbox"
              value="3"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-3"
              name="name"
              type="checkbox"
              value="4"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-3"
            >
              Option 4
            </label>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-checkbox-group"
    >
      <div
        class="yst-checkbox-group__options"
      >
        <div
          class="yst-checkbox"
        >
          <input
            checked=""
            class="yst-checkbox__input"
            id="checkbox-group-0"
            name="name"
            type="checkbox"
            value="1"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-1"
            name="name"
            type="checkbox"
            value="2"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-2"
            name="name"
            type="checkbox"
            value="3"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-3"
            name="name"
            type="checkbox"
            value="4"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-3"
          >
            Option 4
          </label>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Checkbox Group With Label And Description 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-checkbox-group"
      >
        <legend
          class="yst-label yst-checkbox-group__label"
        >
          Checkbox group with a label
        </legend>
        <div
          class="yst-checkbox-group__options"
        >
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-1-0"
              name="name-1"
              type="checkbox"
              value="1"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-1-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-1-1"
              name="name-1"
              type="checkbox"
              value="2"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-1-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-1-2"
              name="name-1"
              type="checkbox"
              value="3"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-1-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-1-3"
              name="name-1"
              type="checkbox"
              value="4"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-1-3"
            >
              Option 4
            </label>
          </div>
        </div>
        <div
          class="yst-checkbox-group__description"
        >
          Checkbox group with a description.
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-checkbox-group"
    >
      <legend
        class="yst-label yst-checkbox-group__label"
      >
        Checkbox group with a label
      </legend>
      <div
        class="yst-checkbox-group__options"
      >
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-1-0"
            name="name-1"
            type="checkbox"
            value="1"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-1-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-1-1"
            name="name-1"
            type="checkbox"
            value="2"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-1-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-1-2"
            name="name-1"
            type="checkbox"
            value="3"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-1-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-1-3"
            name="name-1"
            type="checkbox"
            value="4"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-1-3"
          >
            Option 4
          </label>
        </div>
      </div>
      <div
        class="yst-checkbox-group__description"
      >
        Checkbox group with a description.
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Checkbox Group With Values 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-checkbox-group"
      >
        <legend
          class="yst-label yst-checkbox-group__label"
        >
          Checkbox group with a label
        </legend>
        <div
          class="yst-checkbox-group__options"
        >
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-2-0"
              name="name-2"
              type="checkbox"
              value="1"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-2-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              checked=""
              class="yst-checkbox__input"
              id="checkbox-group-2-1"
              name="name-2"
              type="checkbox"
              value="2"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-2-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              checked=""
              class="yst-checkbox__input"
              id="checkbox-group-2-2"
              name="name-2"
              type="checkbox"
              value="3"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-2-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-checkbox"
          >
            <input
              class="yst-checkbox__input"
              id="checkbox-group-2-3"
              name="name-2"
              type="checkbox"
              value="4"
            />
            <label
              class="yst-label yst-checkbox__label"
              for="checkbox-group-2-3"
            >
              Option 4
            </label>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-checkbox-group"
    >
      <legend
        class="yst-label yst-checkbox-group__label"
      >
        Checkbox group with a label
      </legend>
      <div
        class="yst-checkbox-group__options"
      >
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-2-0"
            name="name-2"
            type="checkbox"
            value="1"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-2-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            checked=""
            class="yst-checkbox__input"
            id="checkbox-group-2-1"
            name="name-2"
            type="checkbox"
            value="2"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-2-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            checked=""
            class="yst-checkbox__input"
            id="checkbox-group-2-2"
            name="name-2"
            type="checkbox"
            value="3"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-2-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-checkbox"
        >
          <input
            class="yst-checkbox__input"
            id="checkbox-group-2-3"
            name="name-2"
            type="checkbox"
            value="4"
          />
          <label
            class="yst-label yst-checkbox__label"
            for="checkbox-group-2-3"
          >
            Option 4
          </label>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Input field Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-text-field"
      >
        <div
          class="yst-relative yst-inline-flex"
        >
          <input
            class="yst-text-input yst-text-field__input"
            id="input-field"
            type="text"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-text-field"
    >
      <div
        class="yst-relative yst-inline-flex"
      >
        <input
          class="yst-text-input yst-text-field__input"
          id="input-field"
          type="text"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Input field With Error 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-text-field"
      >
        <label
          class="yst-label yst-text-field__label"
          for="input-field-2"
        >
          Input field with a label
        </label>
        <div
          class="yst-relative yst-inline-flex"
        >
          <input
            class="yst-text-input yst-text-field__input yst-text-field__input--error"
            id="input-field-2"
            type="email"
          />
          <div
            class="yst-text-field__error-icon"
          >
            <svg
              aria-hidden="true"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
                fill-rule="evenodd"
              />
            </svg>
          </div>
        </div>
        <p
          class="yst-text-field__description"
        >
          Input field with a description.
        </p>
        <p
          class="yst-text-field__error"
        >
          Please enter a valid email address.
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-text-field"
    >
      <label
        class="yst-label yst-text-field__label"
        for="input-field-2"
      >
        Input field with a label
      </label>
      <div
        class="yst-relative yst-inline-flex"
      >
        <input
          class="yst-text-input yst-text-field__input yst-text-field__input--error"
          id="input-field-2"
          type="email"
        />
        <div
          class="yst-text-field__error-icon"
        >
          <svg
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clip-rule="evenodd"
              d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
              fill-rule="evenodd"
            />
          </svg>
        </div>
      </div>
      <p
        class="yst-text-field__description"
      >
        Input field with a description.
      </p>
      <p
        class="yst-text-field__error"
      >
        Please enter a valid email address.
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Input field With Label And Description 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-text-field"
      >
        <label
          class="yst-label yst-text-field__label"
          for="input-field-1"
        >
          Input field with a label
        </label>
        <div
          class="yst-relative yst-inline-flex"
        >
          <input
            class="yst-text-input yst-text-field__input"
            id="input-field-1"
            type="text"
          />
        </div>
        <p
          class="yst-text-field__description"
        >
          Input field with a description.
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-text-field"
    >
      <label
        class="yst-label yst-text-field__label"
        for="input-field-1"
      >
        Input field with a label
      </label>
      <div
        class="yst-relative yst-inline-flex"
      >
        <input
          class="yst-text-input yst-text-field__input"
          id="input-field-1"
          type="text"
        />
      </div>
      <p
        class="yst-text-field__description"
      >
        Input field with a description.
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Radio Group Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-radio-group"
      >
        <div
          class="yst-radio-group__options"
        >
          <div
            class="yst-radio"
          >
            <input
              checked=""
              class="yst-radio__input"
              id="radio-group-0"
              name="name"
              type="radio"
              value="1"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-1"
              name="name"
              type="radio"
              value="2"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-2"
              name="name"
              type="radio"
              value="3"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-3"
              name="name"
              type="radio"
              value="4"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-3"
            >
              Option 4
            </label>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-radio-group"
    >
      <div
        class="yst-radio-group__options"
      >
        <div
          class="yst-radio"
        >
          <input
            checked=""
            class="yst-radio__input"
            id="radio-group-0"
            name="name"
            type="radio"
            value="1"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-1"
            name="name"
            type="radio"
            value="2"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-2"
            name="name"
            type="radio"
            value="3"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-3"
            name="name"
            type="radio"
            value="4"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-3"
          >
            Option 4
          </label>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Radio Group Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-flex yst-flex-col yst-gap-4"
      >
        <fieldset
          class="yst-radio-group"
        >
          <div
            class="yst-radio-group__options"
          >
            <div
              class="yst-radio"
            >
              <input
                class="yst-radio__input"
                id="radio-group-1-0"
                name="name-1"
                type="radio"
                value="1"
              />
              <label
                class="yst-label yst-radio__label"
                for="radio-group-1-0"
              >
                Option 1
              </label>
            </div>
            <div
              class="yst-radio"
            >
              <input
                checked=""
                class="yst-radio__input"
                id="radio-group-1-1"
                name="name-1"
                type="radio"
                value="2"
              />
              <label
                class="yst-label yst-radio__label"
                for="radio-group-1-1"
              >
                Option 2
              </label>
            </div>
            <div
              class="yst-radio"
            >
              <input
                class="yst-radio__input"
                id="radio-group-1-2"
                name="name-1"
                type="radio"
                value="3"
              />
              <label
                class="yst-label yst-radio__label"
                for="radio-group-1-2"
              >
                Option 3
              </label>
            </div>
            <div
              class="yst-radio"
            >
              <input
                class="yst-radio__input"
                id="radio-group-1-3"
                name="name-1"
                type="radio"
                value="4"
              />
              <label
                class="yst-label yst-radio__label"
                for="radio-group-1-3"
              >
                Option 4
              </label>
            </div>
          </div>
        </fieldset>
        <hr />
        <fieldset
          class="yst-radio-group yst-radio-group--inline-block"
        >
          <legend
            class="yst-label yst-radio-group__label"
          >
            Radio group with a label
          </legend>
          <div
            class="yst-radio-group__options"
          >
            <div
              class="yst-radio yst-radio--inline-block"
            >
              <input
                class="yst-radio__input"
                id="radio-group-2-0"
                name="name-2"
                type="radio"
                value="1"
              />
              <label
                class="yst-radio__label"
                for="radio-group-2-0"
              >
                1
                <svg
                  aria-hidden="true"
                  class="yst-radio__check"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clip-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    fill-rule="evenodd"
                  />
                </svg>
              </label>
            </div>
            <div
              class="yst-radio yst-radio--inline-block"
            >
              <input
                checked=""
                class="yst-radio__input"
                id="radio-group-2-1"
                name="name-2"
                type="radio"
                value="2"
              />
              <label
                class="yst-radio__label"
                for="radio-group-2-1"
              >
                2
                <svg
                  aria-hidden="true"
                  class="yst-radio__check"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clip-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    fill-rule="evenodd"
                  />
                </svg>
              </label>
            </div>
            <div
              class="yst-radio yst-radio--inline-block"
            >
              <input
                class="yst-radio__input"
                id="radio-group-2-2"
                name="name-2"
                type="radio"
                value="3"
              />
              <label
                class="yst-radio__label"
                for="radio-group-2-2"
              >
                3
                <svg
                  aria-hidden="true"
                  class="yst-radio__check"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clip-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    fill-rule="evenodd"
                  />
                </svg>
              </label>
            </div>
            <div
              class="yst-radio yst-radio--inline-block"
            >
              <input
                class="yst-radio__input"
                id="radio-group-2-3"
                name="name-2"
                type="radio"
                value="4"
              />
              <label
                class="yst-radio__label"
                for="radio-group-2-3"
              >
                4
                <svg
                  aria-hidden="true"
                  class="yst-radio__check"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    clip-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    fill-rule="evenodd"
                  />
                </svg>
              </label>
            </div>
          </div>
          <div
            class="yst-radio-group__description"
          >
            Radio group with a description.
          </div>
        </fieldset>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-flex yst-flex-col yst-gap-4"
    >
      <fieldset
        class="yst-radio-group"
      >
        <div
          class="yst-radio-group__options"
        >
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-1-0"
              name="name-1"
              type="radio"
              value="1"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-1-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              checked=""
              class="yst-radio__input"
              id="radio-group-1-1"
              name="name-1"
              type="radio"
              value="2"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-1-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-1-2"
              name="name-1"
              type="radio"
              value="3"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-1-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-1-3"
              name="name-1"
              type="radio"
              value="4"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-1-3"
            >
              Option 4
            </label>
          </div>
        </div>
      </fieldset>
      <hr />
      <fieldset
        class="yst-radio-group yst-radio-group--inline-block"
      >
        <legend
          class="yst-label yst-radio-group__label"
        >
          Radio group with a label
        </legend>
        <div
          class="yst-radio-group__options"
        >
          <div
            class="yst-radio yst-radio--inline-block"
          >
            <input
              class="yst-radio__input"
              id="radio-group-2-0"
              name="name-2"
              type="radio"
              value="1"
            />
            <label
              class="yst-radio__label"
              for="radio-group-2-0"
            >
              1
              <svg
                aria-hidden="true"
                class="yst-radio__check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  fill-rule="evenodd"
                />
              </svg>
            </label>
          </div>
          <div
            class="yst-radio yst-radio--inline-block"
          >
            <input
              checked=""
              class="yst-radio__input"
              id="radio-group-2-1"
              name="name-2"
              type="radio"
              value="2"
            />
            <label
              class="yst-radio__label"
              for="radio-group-2-1"
            >
              2
              <svg
                aria-hidden="true"
                class="yst-radio__check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  fill-rule="evenodd"
                />
              </svg>
            </label>
          </div>
          <div
            class="yst-radio yst-radio--inline-block"
          >
            <input
              class="yst-radio__input"
              id="radio-group-2-2"
              name="name-2"
              type="radio"
              value="3"
            />
            <label
              class="yst-radio__label"
              for="radio-group-2-2"
            >
              3
              <svg
                aria-hidden="true"
                class="yst-radio__check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  fill-rule="evenodd"
                />
              </svg>
            </label>
          </div>
          <div
            class="yst-radio yst-radio--inline-block"
          >
            <input
              class="yst-radio__input"
              id="radio-group-2-3"
              name="name-2"
              type="radio"
              value="4"
            />
            <label
              class="yst-radio__label"
              for="radio-group-2-3"
            >
              4
              <svg
                aria-hidden="true"
                class="yst-radio__check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  fill-rule="evenodd"
                />
              </svg>
            </label>
          </div>
        </div>
        <div
          class="yst-radio-group__description"
        >
          Radio group with a description.
        </div>
      </fieldset>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Radio Group With Label And Description 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-radio-group"
      >
        <legend
          class="yst-label yst-radio-group__label"
        >
          Radio group with a label
        </legend>
        <div
          class="yst-radio-group__options"
        >
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-3-0"
              name="name-3"
              type="radio"
              value="1"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-3-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-3-1"
              name="name-3"
              type="radio"
              value="2"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-3-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-3-2"
              name="name-3"
              type="radio"
              value="3"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-3-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-3-3"
              name="name-3"
              type="radio"
              value="4"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-3-3"
            >
              Option 4
            </label>
          </div>
        </div>
        <div
          class="yst-radio-group__description"
        >
          Radio group with a description.
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-radio-group"
    >
      <legend
        class="yst-label yst-radio-group__label"
      >
        Radio group with a label
      </legend>
      <div
        class="yst-radio-group__options"
      >
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-3-0"
            name="name-3"
            type="radio"
            value="1"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-3-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-3-1"
            name="name-3"
            type="radio"
            value="2"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-3-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-3-2"
            name="name-3"
            type="radio"
            value="3"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-3-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-3-3"
            name="name-3"
            type="radio"
            value="4"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-3-3"
          >
            Option 4
          </label>
        </div>
      </div>
      <div
        class="yst-radio-group__description"
      >
        Radio group with a description.
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Radio Group With Value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="yst-radio-group"
      >
        <legend
          class="yst-label yst-radio-group__label"
        >
          Radio group with a label
        </legend>
        <div
          class="yst-radio-group__options"
        >
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-4-0"
              name="name-4"
              type="radio"
              value="1"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-4-0"
            >
              Option 1
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              checked=""
              class="yst-radio__input"
              id="radio-group-4-1"
              name="name-4"
              type="radio"
              value="2"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-4-1"
            >
              Option 2
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-4-2"
              name="name-4"
              type="radio"
              value="3"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-4-2"
            >
              Option 3
            </label>
          </div>
          <div
            class="yst-radio"
          >
            <input
              class="yst-radio__input"
              id="radio-group-4-3"
              name="name-4"
              type="radio"
              value="4"
            />
            <label
              class="yst-label yst-radio__label"
              for="radio-group-4-3"
            >
              Option 4
            </label>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="yst-radio-group"
    >
      <legend
        class="yst-label yst-radio-group__label"
      >
        Radio group with a label
      </legend>
      <div
        class="yst-radio-group__options"
      >
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-4-0"
            name="name-4"
            type="radio"
            value="1"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-4-0"
          >
            Option 1
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            checked=""
            class="yst-radio__input"
            id="radio-group-4-1"
            name="name-4"
            type="radio"
            value="2"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-4-1"
          >
            Option 2
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-4-2"
            name="name-4"
            type="radio"
            value="3"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-4-2"
          >
            Option 3
          </label>
        </div>
        <div
          class="yst-radio"
        >
          <input
            class="yst-radio__input"
            id="radio-group-4-3"
            name="name-4"
            type="radio"
            value="4"
          />
          <label
            class="yst-label yst-radio__label"
            for="radio-group-4-3"
          >
            Option 4
          </label>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Toggle Field Checked 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-toggle-field"
      >
        <div
          class="yst-toggle-field__text"
        >
          <label
            class="yst-label yst-toggle-field__label"
            id="headlessui-label-12"
          >
            Toggle field with a label
          </label>
        </div>
        <button
          aria-checked="true"
          aria-disabled="false"
          aria-labelledby="headlessui-label-12"
          class="yst-toggle yst-toggle--checked"
          id="headlessui-switch-13"
          name="name-2"
          role="switch"
          tabindex="0"
          type="button"
        >
          <span
            class="yst-sr-only"
          >
            Toggle
          </span>
          <span
            class="yst-toggle__handle"
          >
            <span
              aria-hidden="false"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
            <span
              aria-hidden="true"
              hidden=""
              style="display: none;"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--x"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-toggle-field"
    >
      <div
        class="yst-toggle-field__text"
      >
        <label
          class="yst-label yst-toggle-field__label"
          id="headlessui-label-12"
        >
          Toggle field with a label
        </label>
      </div>
      <button
        aria-checked="true"
        aria-disabled="false"
        aria-labelledby="headlessui-label-12"
        class="yst-toggle yst-toggle--checked"
        id="headlessui-switch-13"
        name="name-2"
        role="switch"
        tabindex="0"
        type="button"
      >
        <span
          class="yst-sr-only"
        >
          Toggle
        </span>
        <span
          class="yst-toggle__handle"
        >
          <span
            aria-hidden="false"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--check"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
          <span
            aria-hidden="true"
            hidden=""
            style="display: none;"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--x"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Toggle Field Factory 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-toggle-field"
      >
        <button
          aria-checked="false"
          aria-disabled="false"
          class="yst-toggle"
          id="headlessui-switch-4"
          role="switch"
          tabindex="0"
          type="button"
        >
          <span
            class="yst-sr-only"
          >
            Toggle
          </span>
          <span
            class="yst-toggle__handle"
          >
            <span
              aria-hidden="true"
              hidden=""
              style="display: none;"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
            <span
              aria-hidden="false"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--x"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-toggle-field"
    >
      <button
        aria-checked="false"
        aria-disabled="false"
        class="yst-toggle"
        id="headlessui-switch-4"
        role="switch"
        tabindex="0"
        type="button"
      >
        <span
          class="yst-sr-only"
        >
          Toggle
        </span>
        <span
          class="yst-toggle__handle"
        >
          <span
            aria-hidden="true"
            hidden=""
            style="display: none;"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--check"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
          <span
            aria-hidden="false"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--x"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots 2. Components/Toggle Field With Label And Description 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="yst-toggle-field"
      >
        <div
          class="yst-toggle-field__text"
        >
          <label
            class="yst-label yst-toggle-field__label"
            id="headlessui-label-7"
          >
            Toggle field with a label
          </label>
          <p
            class="yst-toggle-field__description"
            id="headlessui-description-8"
          >
            Toggle field with a description.
          </p>
        </div>
        <button
          aria-checked="false"
          aria-describedby="headlessui-description-8"
          aria-disabled="false"
          aria-labelledby="headlessui-label-7"
          class="yst-toggle"
          id="headlessui-switch-9"
          name="name-1"
          role="switch"
          tabindex="0"
          type="button"
        >
          <span
            class="yst-sr-only"
          >
            Toggle
          </span>
          <span
            class="yst-toggle__handle"
          >
            <span
              aria-hidden="true"
              hidden=""
              style="display: none;"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--check"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
            <span
              aria-hidden="false"
            >
              <svg
                aria-hidden="true"
                class="yst-toggle__icon yst-toggle__icon--x"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clip-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  fill-rule="evenodd"
                />
              </svg>
            </span>
          </span>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="yst-toggle-field"
    >
      <div
        class="yst-toggle-field__text"
      >
        <label
          class="yst-label yst-toggle-field__label"
          id="headlessui-label-7"
        >
          Toggle field with a label
        </label>
        <p
          class="yst-toggle-field__description"
          id="headlessui-description-8"
        >
          Toggle field with a description.
        </p>
      </div>
      <button
        aria-checked="false"
        aria-describedby="headlessui-description-8"
        aria-disabled="false"
        aria-labelledby="headlessui-label-7"
        class="yst-toggle"
        id="headlessui-switch-9"
        name="name-1"
        role="switch"
        tabindex="0"
        type="button"
      >
        <span
          class="yst-sr-only"
        >
          Toggle
        </span>
        <span
          class="yst-toggle__handle"
        >
          <span
            aria-hidden="true"
            hidden=""
            style="display: none;"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--check"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
          <span
            aria-hidden="false"
          >
            <svg
              aria-hidden="true"
              class="yst-toggle__icon yst-toggle__icon--x"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                clip-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                fill-rule="evenodd"
              />
            </svg>
          </span>
        </span>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
